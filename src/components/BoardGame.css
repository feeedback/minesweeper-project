:root {
    --x: 9;
    --y: 9;
    --min-w-cell: 20px;
    --max-w-cell: 48px;

    --max-w-field: 90vw;
    --max-h-field: calc(95vh - 65px);
    --minmax-wh-field: min(
        var(--max-w-cell),
        min(calc(var(--max-w-field) / var(--x)), calc(var(--max-h-field) / var(--y)))
    );
}

.fieldContainer {
    display: grid;
    grid-template-columns: repeat(
        var(--x),
        minmax(var(--min-w-cell), var(--minmax-wh-field))
    );
    grid-template-rows: repeat(
        var(--y),
        minmax(var(--min-w-cell), var(--minmax-wh-field))
    );

    justify-content: stretch;

    background-color: #cecab7;
    border: 4px solid #dfded9;
    margin: 0 auto;
    box-sizing: border-box;
}

/* for square cell (1/1 ratio) */
.fieldContainer::before {
    content: '';
    width: 0;
    padding-bottom: 100%;
    grid-row: 1 / 1;
    grid-column: 1 / 1;
    display: inline-block;
}

.fieldContainer > *:first-child {
    grid-row: 1 / 1;
    grid-column: 1 / 1;
}
/* [end] for square cell (1/1 ratio) */

.Cell {
    -webkit-appearance: none;
    box-sizing: border-box;
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0;
    text-align: center;

    --cell-height: calc(max(var(--min-w-cell), var(--minmax-wh-field)) - 2px);
    font-size: calc(var(--cell-height) * 0.7);

    font-family: 'Roboto Mono', monospace;
    font-weight: bold;
    line-height: 100%;
    border: 1px solid;
    border-color: #9e9e9d;
    background-color: #cecab7;
    color: black;
    cursor: pointer;

    -webkit-aspect-ratio: 1 / 1;
    -moz-aspect-ratio: 1 / 1;
    -ms-aspect-ratio: 1 / 1;
    -o-aspect-ratio: 1 / 1;
    aspect-ratio: 1 / 1;
}
@supports not ((width: min(100px, 200px)) or (width: max(100px, 200px))) {
    /* test clamp() - its analog calc(min(), ...) for Firefox Mobile */
    :root {
        --min-w-cell: 28px;
        --max-w-cell: 28px;
    }
    .fieldContainer {
        grid-template-columns: repeat(var(--x), var(--min-w-cell));
        grid-template-rows: repeat(var(--y), var(--min-w-cell));
    }
    .Cell {
        --cell-height: calc(var(--min-w-cell) - 2px);
        font-size: calc(var(--cell-height) * 0.75);
    }
}
.Cell:disabled {
    -webkit-appearance: none;
    cursor: auto;
}

.Cell:focus {
    outline: black solid 2px;
    outline-offset: -1px;
    z-index: 0;
}

.closed {
    border: 2px solid;
    border-color: #f5f3eb #bab7a9 #bab7a9 #fff9db;
    background-color: #dcd6bc;
}

.flagged {
    color: rgba(255, 0, 0, 0.8);
    font-weight: normal;
}

.mine {
    border: 1px solid;
    border-color: #9e9e9d;
    font-weight: normal;
}

.mineExplosion {
    background-color: #ff00008a;
}

.flaggedWrong {
    color: #b90000;
    position: relative;
    z-index: 1;
}

.flaggedWrong::before {
    content: 'ðŸ’£';
    position: absolute;
    left: 0px;
    right: 0px;
    top: 0px;
    bottom: 0px;
    margin: auto;
    z-index: -1;
    color: rgba(0, 0, 0, 0.4);
    /* opacity: 40%; */
    font-size: 90%;
    font-weight: normal;
    line-height: 140%;
}

.empty {
    cursor: auto;
}

.digit1 {
    color: blue;
}

.digit2 {
    color: green;
}

.digit3 {
    color: red;
}

.digit4 {
    color: darkblue;
}

.digit5 {
    color: darkred;
}

.digit6 {
    color: darkcyan;
}

.digit7 {
    color: black;
}

.digit8 {
    color: gray;
}
