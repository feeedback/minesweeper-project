{"version":3,"sources":["components/FormInitGame.jsx","components/BoardGame.jsx","MinesweeperLogic.js","App.jsx","serviceWorker.js","index.js"],"names":["FormInitGame","props","handleChange","target","name","value","setState","handleSubmitStartNewGame","event","preventDefault","state","columnsCount","rowsCount","minesCount","handleStartNewGame","Number","maxColumnsCount","maxRowsCount","this","maxMinesCount","className","action","onSubmit","htmlFor","type","min","max","onChange","required","React","PureComponent","mapCellValueToText","0","1","2","3","4","5","6","7","8","M","ME","C","F","FW","mapCellValueToClassName","mapCellValueToLabel","BoardGame","closedField","fieldIsDisable","boardHandles","map","row","y","cell","x","key","data-x","data-y","disabled","aria-label","getRandomIndex","Math","floor","random","getRandomInt","mapDefinitionToSymbol","ZERO_MINES_NEARBY","ONE_MINES_NEARBY","TWO_MINES_NEARBY","THREE_MINES_NEARBY","FOUR_MINES_NEARBY","FIVE_MINES_NEARBY","SIX_MINES_NEARBY","SEVEN_MINES_NEARBY","EIGHT_MINES_NEARBY","CELL_CLOSED","MINE","MINE_EXPLOSION","FLAG","FLAG_IN_WRONG_POSITION","Minesweeper","mines","Error","field","leftFlags","leftClosed","gameState","tailMines","cellX","cellY","area8","push","_getArea8","filter","mineX","mineY","forEach","cellValue","_increaseMineCounterInArea8","Array","from","length","fill","_initFieldAndFillValue","_initMines","_calculateMinesAndSetCounterValues","closedCellValue","_markAllWrongFlag","_showAllClosedMine","_markAllTailClosedFlag","timeStart","Date","now","opened","Set","queuePositions","position","shift","add","_openCell","_exitLoseExplosion","_exitWinAllOpened","areaNoOpened","_getArea8Closed","isHasNot","has","console","log","_setFlag","_removeFlag","isInteger","areaFlagged","_getArea8Flagged","areaClosed","areaX","areaY","stepToOpenCell","currentX","currentY","notZeroCellsWithDistance","getDistance","sqrt","distance","sort","a","b","App","_updateState","gameProcessState","game","_handleStartNewGame","MinesweeperLogic","init","document","documentElement","style","setProperty","handleClick","classList","contains","ctrlKey","handleContextMenu","dataset","button","ifSafeSpaceOpenArea8","activeCell","setOrRemoveFlag","handleKeyDownArrow","mapKeyToMoveDirection","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","Object","keys","includes","maxX","maxY","MoveFocusNextNoZeroCell","nextX","nextY","parentElement","children","focus","boardEl","createRef","nextCell","getNearestNotZeroCell","querySelector","mapStateToFinishToMessage","win","lose","playing","flagsClass","onClick","onMouseDown","onContextMenu","onKeyDown","e","renderGameStatusMessage","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2c5964f8.chunk.js","sourcesContent":["import React from 'react';\r\nimport './FormInitGame.css';\r\n\r\nclass FormInitGame extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columnsCount: 10,\r\n      rowsCount: 10,\r\n      minesCount: 10,\r\n\r\n      maxColumnsCount: 500,\r\n      maxRowsCount: 500,\r\n    };\r\n  }\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmitStartNewGame = (event) => {\r\n    event.preventDefault();\r\n    const { columnsCount, rowsCount, minesCount } = this.state;\r\n\r\n    const { handleStartNewGame } = this.props;\r\n    handleStartNewGame(Number(columnsCount), Number(rowsCount), Number(minesCount));\r\n  };\r\n\r\n  componentDidMount() {\r\n    // create default game field when page loaded\r\n    const { columnsCount, rowsCount, minesCount } = this.state;\r\n\r\n    const { handleStartNewGame } = this.props;\r\n    handleStartNewGame(Number(columnsCount), Number(rowsCount), Number(minesCount));\r\n  }\r\n\r\n  render() {\r\n    const { columnsCount, rowsCount, minesCount, maxColumnsCount, maxRowsCount } = this.state;\r\n    const maxMinesCount = columnsCount * rowsCount - 1;\r\n\r\n    return (\r\n      <form\r\n        name=\"initGameSettings\"\r\n        className=\"formInitGameSettings\"\r\n        action=\"\"\r\n        onSubmit={this.handleSubmitStartNewGame}\r\n      >\r\n        <label htmlFor=\"x\">\r\n          X:\r\n          <input\r\n            type=\"number\"\r\n            name=\"columnsCount\"\r\n            className=\"fieldColumnsCount\"\r\n            min=\"2\"\r\n            max={maxColumnsCount}\r\n            value={columnsCount}\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n        </label>\r\n        <label htmlFor=\"y\">\r\n          Y:\r\n          <input\r\n            type=\"number\"\r\n            name=\"rowsCount\"\r\n            className=\"fieldRowsCount\"\r\n            min=\"2\"\r\n            max={maxRowsCount}\r\n            value={rowsCount}\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n        </label>\r\n        <label htmlFor=\"mines\">\r\n          Mines:\r\n          <input\r\n            type=\"number\"\r\n            name=\"minesCount\"\r\n            className=\"fieldMinesCount\"\r\n            min=\"1\"\r\n            max={maxMinesCount}\r\n            value={minesCount}\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className=\"buttonStartGame\">\r\n          Play\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormInitGame;\r\n","import React from 'react';\r\nimport './BoardGame.css';\r\n\r\nconst mapCellValueToText = {\r\n    0: '',\r\n    1: '1',\r\n    2: '2',\r\n    3: '3',\r\n    4: '4',\r\n    5: '5',\r\n    6: '6',\r\n    7: '7',\r\n    8: '8',\r\n\r\n    M: '💣', // mine\r\n    ME: '💣', // mine explosion\r\n    C: '', // '?',  closed cell\r\n    F: '🚩', //  🏴⚑🚩flagged cell\r\n    FW: '✕', // ✕✖❌wrong flagged cell\r\n};\r\nconst mapCellValueToClassName = {\r\n    0: 'empty',\r\n    1: 'digit1',\r\n    2: 'digit2',\r\n    3: 'digit3',\r\n    4: 'digit4',\r\n    5: 'digit5',\r\n    6: 'digit6',\r\n    7: 'digit7',\r\n    8: 'digit8',\r\n\r\n    M: 'mine',\r\n    ME: 'mine mineExplosion',\r\n    C: 'closed',\r\n    F: 'closed flagged',\r\n    FW: 'flaggedWrong',\r\n};\r\nconst mapCellValueToLabel = {\r\n    0: 'empty',\r\n    1: '1',\r\n    2: '2',\r\n    3: '3',\r\n    4: '4',\r\n    5: '5',\r\n    6: '6',\r\n    7: '7',\r\n    8: '8',\r\n\r\n    M: 'mine',\r\n    ME: 'explosion mine',\r\n    C: 'closed',\r\n    F: 'flagged',\r\n    FW: 'wrong flagged',\r\n};\r\n\r\nconst BoardGame = ({ closedField, fieldIsDisable, boardHandles }) => {\r\n    return (\r\n        <div className=\"fieldContainer\" {...boardHandles}>\r\n            {closedField.map((row, y) =>\r\n                row.map((cell, x) => (\r\n                    <button\r\n                        key={`Cell__${x}_${y}`}\r\n                        data-x={x}\r\n                        data-y={y}\r\n                        className={`Cell ${mapCellValueToClassName[cell]}`}\r\n                        disabled={fieldIsDisable[y][x]}\r\n                        aria-label={mapCellValueToLabel[cell]}\r\n                    >\r\n                        {mapCellValueToText[cell]}\r\n                    </button>\r\n                ))\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BoardGame;\r\n","const getRandomInt = (min, max) => Math.floor(min + Math.random() * (max + 1 - min));\r\nconst getRandomIndex = (max) => getRandomInt(0, max - 1);\r\nconst mapDefinitionToSymbol = {\r\n  ZERO_MINES_NEARBY: 0,\r\n  ONE_MINES_NEARBY: 1,\r\n  TWO_MINES_NEARBY: 2,\r\n  THREE_MINES_NEARBY: 3,\r\n  FOUR_MINES_NEARBY: 4,\r\n  FIVE_MINES_NEARBY: 5,\r\n  SIX_MINES_NEARBY: 6,\r\n  SEVEN_MINES_NEARBY: 7,\r\n  EIGHT_MINES_NEARBY: 8,\r\n\r\n  CELL_CLOSED: 'C',\r\n  MINE: 'M',\r\n  MINE_EXPLOSION: 'ME',\r\n  FLAG: 'F',\r\n  FLAG_IN_WRONG_POSITION: 'FW',\r\n};\r\n\r\nclass Minesweeper {\r\n  constructor(x = 9, y = 9, mines = 10) {\r\n    if (mines > x * y) {\r\n      throw new Error('ERROR: mines more than cell');\r\n    }\r\n    this.x = x;\r\n    this.y = y;\r\n    this.mines = mines;\r\n\r\n    this.field = [];\r\n    this.closedField = [];\r\n\r\n    this.leftFlags = mines;\r\n    this.leftClosed = x * y;\r\n\r\n    this.gameState = 'non-started';\r\n    this.mapDefinitionToSymbol = mapDefinitionToSymbol;\r\n  }\r\n\r\n  _initMines() {\r\n    let tailMines = this.mines;\r\n    while (tailMines !== 0) {\r\n      const x = getRandomIndex(this.x);\r\n      const y = getRandomIndex(this.y);\r\n\r\n      if (this.field[y][x] !== mapDefinitionToSymbol.MINE) {\r\n        this.field[y][x] = mapDefinitionToSymbol.MINE;\r\n        tailMines -= 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  _getArea8(cellX, cellY) {\r\n    const area8 = [];\r\n    for (let y = cellY - 1; y <= cellY + 1; y += 1) {\r\n      for (let x = cellX - 1; x <= cellX + 1; x += 1) {\r\n        if (y >= 0 && y < this.y && x >= 0 && x < this.x && !(cellX === x && cellY === y)) {\r\n          area8.push({ x, y });\r\n        }\r\n      }\r\n    }\r\n    return area8;\r\n  }\r\n\r\n  _getArea8Closed(cellX, cellY, area8 = this._getArea8(cellX, cellY)) {\r\n    return area8.filter(({ x, y }) => this.closedField[y][x] === mapDefinitionToSymbol.CELL_CLOSED);\r\n  }\r\n  _getArea8Flagged(cellX, cellY, area8 = this._getArea8(cellX, cellY)) {\r\n    return area8.filter(({ x, y }) => this.closedField[y][x] === mapDefinitionToSymbol.FLAG);\r\n  }\r\n\r\n  _increaseMineCounterInArea8(mineX, mineY) {\r\n    this._getArea8(mineX, mineY).forEach(({ x, y }) => {\r\n      const cellValue = this.field[y][x];\r\n      if (cellValue !== mapDefinitionToSymbol.MINE) {\r\n        this.field[y][x] = cellValue + 1;\r\n      }\r\n    });\r\n  }\r\n\r\n  _calculateMinesAndSetCounterValues() {\r\n    this.field.forEach((row, y) =>\r\n      row.forEach((cell, x) => {\r\n        if (cell === mapDefinitionToSymbol.MINE) {\r\n          this._increaseMineCounterInArea8(x, y);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  _initFieldAndFillValue(value) {\r\n    return Array.from({ length: this.y }, () => new Array(this.x).fill(value));\r\n  }\r\n\r\n  init() {\r\n    this.closedField = this._initFieldAndFillValue(mapDefinitionToSymbol.CELL_CLOSED);\r\n    this.field = this._initFieldAndFillValue(mapDefinitionToSymbol.ZERO_MINES_NEARBY);\r\n    this._initMines();\r\n    this._calculateMinesAndSetCounterValues();\r\n    this.gameState = 'playing';\r\n  }\r\n\r\n  _markAllWrongFlag() {\r\n    this.closedField.forEach((row, y) =>\r\n      row.forEach((closedCellValue, x) => {\r\n        if (\r\n          closedCellValue === mapDefinitionToSymbol.FLAG &&\r\n          this.field[y][x] !== mapDefinitionToSymbol.MINE\r\n        ) {\r\n          this.closedField[y][x] = mapDefinitionToSymbol.FLAG_IN_WRONG_POSITION;\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  _markAllTailClosedFlag() {\r\n    this.closedField.forEach((row, y) =>\r\n      row.forEach((closedCellValue, x) => {\r\n        if (\r\n          closedCellValue === mapDefinitionToSymbol.CELL_CLOSED &&\r\n          this.field[y][x] === mapDefinitionToSymbol.MINE\r\n        ) {\r\n          this.closedField[y][x] = mapDefinitionToSymbol.FLAG;\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  _showAllClosedMine() {\r\n    this.closedField.forEach((row, y) =>\r\n      row.forEach((closedCellValue, x) => {\r\n        if (\r\n          closedCellValue === mapDefinitionToSymbol.CELL_CLOSED &&\r\n          this.field[y][x] === mapDefinitionToSymbol.MINE\r\n        ) {\r\n          this.closedField[y][x] = mapDefinitionToSymbol.MINE;\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  _exitLoseExplosion(x, y) {\r\n    // console.log('💣Explosion💣! GAME OVER');\r\n    this.closedField[y][x] = mapDefinitionToSymbol.MINE_EXPLOSION;\r\n    this._markAllWrongFlag();\r\n    this._showAllClosedMine();\r\n    this.gameState = 'lose';\r\n  }\r\n\r\n  _exitWinAllOpened() {\r\n    this._markAllTailClosedFlag();\r\n    // console.log('All opened!  You win!🏆');\r\n    this.gameState = 'win';\r\n  }\r\n\r\n  _openCell(x, y) {\r\n    this.leftClosed -= 1;\r\n    this.closedField[y][x] = this.field[y][x];\r\n  }\r\n\r\n  stepToOpenCell(x, y) {\r\n    const timeStart = Date.now();\r\n    let status = 'OPENING';\r\n    const opened = new Set();\r\n    const queuePositions = [{ x, y }];\r\n\r\n    while (queuePositions.length > 0 || status !== 'OPENING') {\r\n      const position = queuePositions.shift();\r\n      if (!position) {\r\n        continue;\r\n      }\r\n      const { x, y } = position;\r\n      opened.add(`${x},${y}`);\r\n\r\n      if (this.closedField[y][x] !== mapDefinitionToSymbol.CELL_CLOSED) {\r\n        continue;\r\n      }\r\n      this._openCell(x, y);\r\n      if (this.field[y][x] === mapDefinitionToSymbol.MINE) {\r\n        this._exitLoseExplosion(x, y);\r\n        break;\r\n      }\r\n      // остались закрытыми только мины\r\n      if (this.leftClosed === this.leftFlags) {\r\n        this._exitWinAllOpened();\r\n        break;\r\n      }\r\n\r\n      if (this.field[y][x] === mapDefinitionToSymbol.ZERO_MINES_NEARBY) {\r\n        const areaNoOpened = this._getArea8Closed(x, y).filter(({ x, y }) => {\r\n          const isHasNot = !opened.has(`${x},${y}`);\r\n          if (isHasNot) {\r\n            opened.add(`${x},${y}`);\r\n          }\r\n          return isHasNot;\r\n        });\r\n        queuePositions.push(...areaNoOpened);\r\n      }\r\n    }\r\n\r\n    console.log('stepToOpenCell ( x', x, ', y', y, ') end: ', Date.now() - timeStart, 'ms');\r\n  }\r\n\r\n  _setFlag(x, y) {\r\n    this.leftFlags -= 1;\r\n    this.leftClosed -= 1;\r\n    this.closedField[y][x] = mapDefinitionToSymbol.FLAG;\r\n    // console.log('FLAG THE MINE 🚩', x, y);\r\n  }\r\n\r\n  _removeFlag(x, y) {\r\n    this.leftFlags += 1;\r\n    this.leftClosed += 1;\r\n    this.closedField[y][x] = mapDefinitionToSymbol.CELL_CLOSED;\r\n    // console.log('DELETE FLAG X🚩', x, y);\r\n  }\r\n\r\n  setOrRemoveFlag(x, y) {\r\n    if (this.closedField[y][x] === mapDefinitionToSymbol.CELL_CLOSED && this.leftFlags > 0) {\r\n      this._setFlag(x, y);\r\n    } else if (this.closedField[y][x] === mapDefinitionToSymbol.FLAG) {\r\n      this._removeFlag(x, y);\r\n    }\r\n  }\r\n\r\n  ifSafeSpaceOpenArea8(x, y) {\r\n    // console.log('_checkIsThisSafeCell', x, y);\r\n    const cellValue = this.closedField[y][x];\r\n    if (!Number.isInteger(cellValue) || cellValue === mapDefinitionToSymbol.ZERO_MINES_NEARBY) {\r\n      return;\r\n    }\r\n    const area8 = this._getArea8(x, y);\r\n    const areaFlagged = this._getArea8Flagged(x, y, area8);\r\n    const areaClosed = this._getArea8Closed(x, y, area8);\r\n\r\n    if (cellValue === areaFlagged.length) {\r\n      for (const { x: areaX, y: areaY } of areaClosed) {\r\n        this.stepToOpenCell(areaX, areaY);\r\n      }\r\n    }\r\n  }\r\n  getNearestNotZeroCell(currentX, currentY) {\r\n    if (\r\n      !this.closedField[currentY] ||\r\n      this.closedField[currentY][currentX] !== mapDefinitionToSymbol.ZERO_MINES_NEARBY\r\n    ) {\r\n      return null;\r\n    }\r\n\r\n    const notZeroCellsWithDistance = [];\r\n    const getDistance = (x, y) => Math.sqrt((x - currentX) ** 2 + (y - currentY) ** 2);\r\n\r\n    this.closedField.forEach((row, y) =>\r\n      row.forEach((cellValue, x) => {\r\n        if (cellValue !== mapDefinitionToSymbol.ZERO_MINES_NEARBY) {\r\n          notZeroCellsWithDistance.push({ x, y, distance: getDistance(x, y) });\r\n        }\r\n      })\r\n    );\r\n    if (notZeroCellsWithDistance.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    const [nearestCell] = notZeroCellsWithDistance.sort((a, b) => a.distance - b.distance);\r\n    return nearestCell;\r\n  }\r\n}\r\n\r\nexport default Minesweeper;\r\n","/* eslint-disable jsx-a11y/accessible-emoji */\nimport React from 'react';\nimport './App.css';\nimport FormInitGame from './components/FormInitGame.jsx';\nimport BoardGame from './components/BoardGame.jsx';\nimport MinesweeperLogic from './MinesweeperLogic';\n// TODO: Добавить функцию ИИ авто-прохождения или частичного (только открытие безопасных, либо только флажки)\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gameProcessState: 'no-started',\n      closedField: [],\n      activeCell: { x: 0, y: 0 },\n    };\n    this.boardEl = React.createRef();\n  }\n\n  _updateState = () => {\n    this.setState({\n      gameProcessState: this.game.gameState,\n      closedField: this.game.closedField,\n    });\n  };\n\n  _handleStartNewGame = (columnsCount, rowsCount, minesCount) => {\n    this.game = new MinesweeperLogic(columnsCount, rowsCount, minesCount);\n    this.game.init();\n\n    document.documentElement.style.setProperty('--x', columnsCount);\n    document.documentElement.style.setProperty('--y', rowsCount);\n\n    this._updateState();\n  };\n\n  handleClick = (event) => {\n    const { target } = event;\n    if (!target.classList.contains('Cell')) {\n      return false;\n    }\n    // Ctrl + Space for mark Flag on keyboard\n    if (event.ctrlKey) {\n      return this.handleContextMenu(event);\n    }\n    // Shift + Space for open Safe Area8 on keyboard\n\n    const { x, y } = target.dataset;\n    if (event.button === 0 && this.game.closedField[y][x] === this.game.mapDefinitionToSymbol.CELL_CLOSED) {\n      this.game.stepToOpenCell(Number(x), Number(y));\n    } else {\n      this.game.ifSafeSpaceOpenArea8(Number(x), Number(y));\n    }\n\n    this.setState({\n      gameProcessState: this.game.gameState,\n      closedField: this.game.closedField,\n      activeCell: { x, y },\n    });\n  };\n\n  componentDidUpdate() {\n    // focus next not disabled cell for navigation (because disabled button lost focus)\n    const {\n      activeCell: { x, y },\n    } = this.state;\n\n    const nextCell = this.game.getNearestNotZeroCell(x, y);\n    if (nextCell === null) {\n      if (this.game.leftClosed === this.game.x * this.game.y) {\n        document.querySelector('.fieldContainer').children[0].focus();\n      }\n      return;\n    }\n    document.querySelector('.fieldContainer').children[nextCell.x + nextCell.y * this.game.x].focus();\n  }\n\n  handleContextMenu = (event) => {\n    event.preventDefault();\n    const { target } = event;\n\n    if (!target.classList.contains('Cell')) {\n      return false;\n    }\n\n    const { x, y } = target.dataset;\n    this.game.setOrRemoveFlag(Number(x), Number(y));\n    this.setState({\n      gameProcessState: this.game.gameState,\n      closedField: this.game.closedField,\n      activeCell: { x, y },\n    });\n  };\n\n  handleKeyDownArrow = ({ target, key }) => {\n    const mapKeyToMoveDirection = {\n      ArrowUp: (x, y) => [x, y - 1],\n      ArrowDown: (x, y) => [x, y + 1],\n      ArrowLeft: (x, y) => [x - 1, y],\n      ArrowRight: (x, y) => [x + 1, y],\n    };\n    if (!Object.keys(mapKeyToMoveDirection).includes(key)) {\n      return;\n    }\n\n    const { x: currentX, y: currentY } = target.dataset;\n    const { x: maxX, y: maxY } = this.game;\n    const { closedField } = this.state;\n\n    const MoveFocusNextNoZeroCell = (x, y) => {\n      const [nextX, nextY] = mapKeyToMoveDirection[key](x, y);\n      if (nextX < 0 || nextX >= maxX || nextY < 0 || nextY >= maxY) {\n        return;\n      }\n      if (closedField[nextY][nextX] === this.game.mapDefinitionToSymbol.ZERO_MINES_NEARBY) {\n        return MoveFocusNextNoZeroCell(nextX, nextY);\n      }\n      const nextCell = target.parentElement.children[nextX + nextY * maxX];\n      nextCell.focus();\n    };\n    MoveFocusNextNoZeroCell(Number(currentX), Number(currentY));\n  };\n\n  renderGameStatusMessage() {\n    const mapStateToFinishToMessage = {\n      win: <span className=\"messageWin\">All opened right! You win!🏆</span>,\n      lose: <span className=\"messageLose\">BOOM! Game Over! ☠️</span>,\n      playing: null,\n    };\n    const { gameProcessState } = this.state;\n    const flagsClass = this.game.leftFlags === 0 ? 'messageFlags messageFlagsZero' : 'messageFlags';\n\n    return (\n      <div className=\"message\">\n        <span className={flagsClass}>Flags: {this.game.leftFlags} </span>\n        of {this.game.mines}. {mapStateToFinishToMessage[gameProcessState]}\n      </div>\n    );\n  }\n\n  render() {\n    const { gameProcessState, closedField } = this.state;\n    const boardHandles = {\n      onClick: this.handleClick, // for work keyboard space\n      onMouseDown: this.handleClick, // for speed\n      onContextMenu: this.handleContextMenu,\n      onKeyDown: this.handleKeyDownArrow,\n    };\n\n    const fieldIsDisable = closedField.map((row) =>\n      row.map(\n        (cell) => gameProcessState !== 'playing' || cell === this.game.mapDefinitionToSymbol.ZERO_MINES_NEARBY\n      )\n    );\n\n    return (\n      <div className=\"App\" onContextMenu={(e) => e.preventDefault()}>\n        <FormInitGame handleStartNewGame={this._handleStartNewGame} />\n\n        {gameProcessState === 'no-started' ? null : (\n          <>\n            {this.renderGameStatusMessage()}\n            <BoardGame\n              closedField={closedField}\n              fieldIsDisable={fieldIsDisable}\n              boardHandles={boardHandles}\n            />\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}